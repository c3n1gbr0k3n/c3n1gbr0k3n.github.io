var suggestions=document.getElementById("suggestions"),search=document.getElementById("search");search!==null&&document.addEventListener("keydown",inputFocus);function inputFocus(e){e.ctrlKey&&e.key==="/"&&(e.preventDefault(),search.focus()),e.key==="Escape"&&(search.blur(),suggestions.classList.add("d-none"))}document.addEventListener("click",function(e){var t=suggestions.contains(e.target);t||suggestions.classList.add("d-none")}),document.addEventListener("keydown",suggestionFocus);function suggestionFocus(e){const s=suggestions.classList.contains("d-none");if(s)return;const t=[...suggestions.querySelectorAll("a")];if(t.length===0)return;const n=t.indexOf(document.activeElement);if(e.key==="ArrowUp"){e.preventDefault();const s=n>0?n-1:0;t[s].focus()}else if(e.key==="ArrowDown"){e.preventDefault();const s=n+1<t.length?n+1:n;t[s].focus()}}(function(){var e=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:"id",store:["href","title","description"],index:["title","description","content"]}});e.add({id:0,href:"/docs/stackoverflow/ret2text/",title:"ret2text",description:"Doks is a Hugo theme for building secure, fast, and SEO-ready documentation websites, which you can easily update and customize.",content:`0x01 介绍 # 既然溢出可以覆盖局部变量，即利用栈三大功能之一保存局部变量，那么也可以利用栈三大功能之一保存函数返回后的地址，我们可以溢出覆盖函数返回后的地址为任意我们想要它返回执行的地方，从而实现getshell
![1af992215335770bc01df475475fa9e1]images/1af992215335770bc01df475475fa9e1.png
举一个例子来说
#include\u0026lt;stdio.h\u0026gt; #include\u0026lt;stdlib.h\u0026gt; void getshell() { // getshell函数 system(\u0026quot;/bin/sh\u0026quot;); } void run(){ // 写run函数的目的是为了简化，因为现在32位main函数需要绕过ecx char buf[0x10]; // local variable printf(\u0026quot;input: \u0026quot;); scanf(\u0026quot;%s\u0026quot;, buf); } int main(){ run(); return 0; } // gcc ret2text.c -o ret2text -m32 -fno-pic -no-pie -fno-stack-protector 按照正常的程序流程来说，main函数应该会返回执行_libc_start_main中的指令，但是scanf的%s格式化控制符是可以无字符数限制输入造成栈溢出的，这样我们就可以想办法覆盖main函数的函数返回地址为程序中getshell函数的地址，从而执行 system(\u0026quot;/bin/sh\u0026quot;); 首先需要的是确定getshell函数的位置，这里可以用objdump之类的工具来查看
![3cd18b5ddfdc7a98e374380aabba5015]images/3cd18b5ddfdc7a98e374380aabba5015.png
`}),e.add({id:1,href:"/docs/stackoverflow/ret2syscall/",title:"Ret2syscall",description:"0x01 介绍 # ",content:"0x01 介绍 # "}),e.add({id:2,href:"/docs/stackoverflow/",title:"Stackoverflow",description:"",content:""}),e.add({id:3,href:"/docs/",title:"Docs",description:"Docs Doks.",content:""}),search.addEventListener("input",t,!0);function t(){const s=5;var n=this.value,o=e.search(n,{limit:s,enrich:!0});const t=new Map;for(const e of o.flatMap(e=>e.result)){if(t.has(e.doc.href))continue;t.set(e.doc.href,e.doc)}if(suggestions.innerHTML="",suggestions.classList.remove("d-none"),t.size===0&&n){const e=document.createElement("div");e.innerHTML=`No results for "<strong>${n}</strong>"`,e.classList.add("suggestion__no-results"),suggestions.appendChild(e);return}for(const[r,a]of t){const n=document.createElement("div");suggestions.appendChild(n);const e=document.createElement("a");e.href=r,n.appendChild(e);const o=document.createElement("span");o.textContent=a.title,o.classList.add("suggestion__title"),e.appendChild(o);const i=document.createElement("span");if(i.textContent=a.description,i.classList.add("suggestion__description"),e.appendChild(i),suggestions.appendChild(n),suggestions.childElementCount==s)break}}})()