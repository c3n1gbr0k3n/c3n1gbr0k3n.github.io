<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Races on</title><link>https://c3n1gbr0k3n.github.io/writeup/races/</link><description>Recent content in Races on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 23 Apr 2023 02:20:25 +0800</lastBuildDate><atom:link href="https://c3n1gbr0k3n.github.io/writeup/races/index.xml" rel="self" type="application/rss+xml"/><item><title>阿里云CTF</title><link>https://c3n1gbr0k3n.github.io/writeup/races/%E9%98%BF%E9%87%8C%E4%BA%91ctf/</link><pubDate>Sun, 23 Apr 2023 02:21:47 +0800</pubDate><guid>https://c3n1gbr0k3n.github.io/writeup/races/%E9%98%BF%E9%87%8C%E4%BA%91ctf/</guid><description>Reverse_字节码跳动 # 0x01 分析 # 这道题是一个js字节码分析的题目，根据run.sh可以知道题目删除了js源码，保留了字节码文件 flagchecker_bytecode.txt ，以及一个jsc二进制文件。既然有字节码文件，那么我们直接来分析该文件。在这之前我也没有接触过js字节码逆向，所以我先写一个测试文件并输出字节码来对比分析，再结合网上的部分文章，大概可以看懂字节码。
测试js文件为
function aaa(string, j) { for(let i = 0; i &amp;lt; string.length; i++) { string[i] |= j; } } function main() { let string = &amp;quot;ctf{test}&amp;quot;; aaa(string, 20); console.log(string); } main() 然后执行命令
./node --print-bytecode test.js &amp;gt; test.txt 直接搜字符串 ctf{test}。
然后就直接找到了main函数，如果直接去搜 SharedFunctionInfo main 。
发现有一个对类似于对函数进行注册的地方，里面还能看到aaa函数，接下来我们对比源码来分析字节码
// main函数 Bytecode Age: 0 147 S&amp;gt; 0x3f079242086e @ 0 : 13 00 LdaConstant [0] // 将常量池中的0读取到累加器中，常量池就是最下面那个FixedArray，这里就是加载ctf{test} 0x3f0792420870 @ 2 : c3 Star0 // 将累加器中的值给r0 161 S&amp;gt; 0x3f0792420871 @ 3 : 17 02 LdaImmutableCurrentContextSlot [2] // 猜测是加载aaa函数到累加器 0x3f0792420873 @ 5 : c2 Star1 // 将累加器值给r1 0x3f0792420874 @ 6 : 0d 14 LdaSmi [20] // 立即值20加载到累加器 0x3f0792420876 @ 8 : c0 Star3 // 20给r3 161 E&amp;gt; 0x3f0792420877 @ 9 : 62 f9 fa f7 00 CallUndefinedReceiver2 r1, r0, r3, [0] // 调用函数 r1(r0, r3) 179 S&amp;gt; 0x3f079242087c @ 14 : 21 01 02 LdaGlobal [1], [2] // 加载常量池的1 console 0x3f079242087f @ 17 : c1 Star2 // 将其给r2 187 E&amp;gt; 0x3f0792420880 @ 18 : 2d f8 02 04 LdaNamedProperty r2, [2], [4] // 常量池的2为log，所以为加载console.</description></item></channel></rss>